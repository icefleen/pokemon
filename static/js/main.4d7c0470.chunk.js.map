{"version":3,"sources":["components/Header/Header.module.scss","components/Pokemons/Pokemons.module.scss","components/Menu/Menu.module.scss","components/Pokemon/Block.module.scss","components/Card/Card.module.scss","components/Pokemon/MovesBlock/MovesTable/MovesTable.module.scss","App.module.scss","components/Button/Button.module.scss","components/Pokemon/Pokemon.module.scss","components/List/List.module.scss","components/Loader/Loader.module.scss","components/Loader/Spinner/Spinner.module.scss","api/api.ts","store/listPage/listReducer.ts","store/pokemonPage/pokemonReducer.ts","store/homePage/homeReducer.ts","store/store.ts","components/Button/Button.tsx","components/Card/Card.tsx","store/homePage/homeSelectors.ts","components/Loader/Spinner/Spinner.tsx","components/Loader/Loader.tsx","components/Pokemons/Pokemons.tsx","store/pokemonPage/pokemonSelectors.ts","components/Pokemon/SummaryBlock/SummaryBlock.tsx","components/Pokemon/StatsBlock/StatsBlock.tsx","components/Pokemon/MovesBlock/MovesTable/MovesTable.tsx","components/Pokemon/MovesBlock/MovesBlock.tsx","components/Pokemon/Pokemon.tsx","assets/icons/menu.svg","components/Header/Header.tsx","assets/icons/close.svg","components/Menu/Menu.tsx","store/listPage/listSelectors.ts","components/List/List.tsx","App.tsx","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","fetchPokemons","limit","offset","a","get","response","data","fetchPokemonByName","name","fetchPokemonById","id","fetchVersions","results","fetchMoveStats","move","accuracy","power","pp","type","TOGGLE_LOADING","SET_ITEMS","initialState","isLoading","pokemons","toggleLoading","SET_POKEMOM","SET_VERSIONS","SET_SELECTED_VERSION","SET_MOVES","pokemon","versions","selectedVersion","moves","setVersions","setMoves","SET_COUNT","SET_POKEMONS","SET_OFFSET","count","setOffset","setPokemons","rootReducer","combineReducers","homeState","state","action","pokemonPage","listPage","store","createStore","applyMiddleware","thunk","Button","className","variant","disabled","onClick","children","classnames","s","button","button_primary","Card","image","title","card","card__imageWrapper","card__imageFixer","card__image","src","alt","card__title","getHomePageIsLoading","getPokemons","getCount","getOffset","Spinner","Loader","show","loader","Pokemons","loadPokemons","useEffect","length","gallery","gallery__cards","cards","map","to","sprites","other","front_default","gallery__buttons","Math","ceil","floor","connect","ownProps","dispatch","Promise","all","ref","React","memo","getPokemonPageIsLoading","getPokemon","getVersions","getSelectedVersion","getMovesByVersion","createSelector","version","filter","version_group_details","some","v","version_group","SummaryBlock","abilities","forms","height","weight","base_experience","types","block","block__title","block__line","block__key","ab","tag","block__value","ability","form","StatsBlock","stats","stat","base_stat","MovesTable","table","table__line","find","m","level_learned_at","move_learn_method","MovesBlock","setSelectedVersion","block__select","value","onChange","e","target","withRouter","match","loadPokemon","movesDetailed","loadVersions","params","Header","openMenu","header","header__wrapper","nav__link","header__brand","menuIcon","header__nav","nav","nav__list","nav__item","Menu","isShowing","closeMenu","overlay","overlay_hidden","menu","menu_hidden","menu__closeButton","closeIcon","menu__list","menu__item","menu__itemLabel","getListPageIsLoading","getPokemonsRefs","loadItems","history","useHistory","list","element","dataset","url","push","split","slice","join","list__item","data-url","App","useState","menuShowing","setMenuShowing","basename","process","main","main__wrapper","exact","from","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d7c0470.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1ep4N\",\"header__wrapper\":\"Header_header__wrapper__ph6_Z\",\"nav__list\":\"Header_nav__list__3wiwf\",\"nav__link\":\"Header_nav__link__20MjH\",\"menuIcon\":\"Header_menuIcon__u90gc\",\"nav\":\"Header_nav__-FaIU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery__cards\":\"Pokemons_gallery__cards__feKxw\",\"gallery__buttons\":\"Pokemons_gallery__buttons__2iw-I\",\"d-sm-none\":\"Pokemons_d-sm-none__g69Mw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Menu_overlay__3fiqn\",\"overlay_hidden\":\"Menu_overlay_hidden__3tN7M\",\"menu\":\"Menu_menu__p53SH\",\"menu_hidden\":\"Menu_menu_hidden__22bNN\",\"menu__closeButton\":\"Menu_menu__closeButton__1If0q\",\"menu__list\":\"Menu_menu__list__2aXMy\",\"menu__itemLabel\":\"Menu_menu__itemLabel__2mq48\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"Block_block__2E7df\",\"block__title\":\"Block_block__title__3BU6C\",\"block__line\":\"Block_block__line__1yZii\",\"block__key\":\"Block_block__key__3YOcn\",\"block__value\":\"Block_block__value__3lijP\",\"block__select\":\"Block_block__select__3AJ4G\",\"tag\":\"Block_tag__2hvMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__w0aCd\",\"card__imageWrapper\":\"Card_card__imageWrapper__1UsNx\",\"card__imageFixer\":\"Card_card__imageFixer__2XzYI\",\"card__image\":\"Card_card__image__2kQtu\",\"card__title\":\"Card_card__title__2aRFv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"MovesTable_table__qbPrJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__1AUB9\",\"main__wrapper\":\"App_main__wrapper__226Gn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1Yxs6\",\"button_primary\":\"Button_button_primary__2b5Zj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokemonPage\":\"Pokemon_pokemonPage__3jQCL\",\"pokemon\":\"Pokemon_pokemon__1MnLK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__item\":\"List_list__item__3iLIn\",\"list\":\"List_list__bwM59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3n7nq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lds-roller\":\"Spinner_lds-roller__3fYZ_\"};","import { MoveDetailedInfo } from \"./../types/MoveTypes\";\nimport * as PokemonTypes from \"../types/PokemonTypes\";\nimport axios, { AxiosInstance } from \"axios\";\n\nconst instance: AxiosInstance = axios.create({\n  baseURL: \"https://pokeapi.co/api/v2\",\n});\n\ntype FetchItemsResponseType = {\n  count: number;\n  previous: string | null;\n  next: string | null;\n  results: Array<PokemonTypes.Ref>;\n};\n\nexport const fetchPokemons = async (\n  limit: number,\n  offset: number\n): Promise<FetchItemsResponseType> => {\n  const response = await instance.get<FetchItemsResponseType>(\n    `/pokemon?limit=${limit}&offset=${offset}`\n  );\n\n  return response.data;\n};\n\nexport const fetchPokemonByName = async (\n  name: string\n): Promise<PokemonTypes.Pokemon> => {\n  const response = await instance.get<PokemonTypes.Pokemon>(`/pokemon/${name}`);\n\n  return response.data;\n};\n\nexport const fetchPokemonById = async (\n  id: number\n): Promise<PokemonTypes.Pokemon> => {\n  const response = await instance.get<PokemonTypes.Pokemon>(`/pokemon/${id}`);\n\n  return response.data;\n};\n\nexport const fetchVersions = async (): Promise<Array<PokemonTypes.Ref>> => {\n  const response = await instance.get<FetchItemsResponseType>(\n    \"/version?limit=100\"\n  );\n\n  return response.data.results;\n};\n\ntype FetchMoveStatsResponseType = {\n  accuracy: number;\n  power: number;\n  pp: number;\n  type: PokemonTypes.Ref;\n};\n\nexport const fetchMoveStats = async (\n  move: PokemonTypes.Move\n): Promise<MoveDetailedInfo> => {\n  const response = await instance.get<FetchMoveStatsResponseType>(\n    `/move/${move.move.name}`\n  );\n\n  return {\n    ...move,\n    accuracy: response.data.accuracy,\n    power: response.data.power,\n    pp: response.data.power,\n    type: response.data.type.name,\n  };\n};\n","import { fetchPokemons } from \"./../../api/api\";\nimport { RootState } from \"./../store\";\nimport { ThunkAction } from \"redux-thunk\";\nimport * as PokemonTypes from \"../../types/PokemonTypes\";\n\nconst TOGGLE_LOADING = \"TOGGLE LOADING\";\nconst SET_ITEMS = \"SET ITEMS\";\n\ntype PokemonsListState = {\n  isLoading: boolean;\n  pokemons: Array<PokemonTypes.Ref>;\n};\n\nconst initialState = {\n  isLoading: false,\n  pokemons: [],\n};\n\nexport const listReducer = (\n  state: PokemonsListState = initialState,\n  action: ActionsType\n): PokemonsListState => {\n  switch (action.type) {\n    case TOGGLE_LOADING:\n      return { ...state, isLoading: action.isLoading };\n\n    case SET_ITEMS:\n      return { ...state, pokemons: action.pokemons };\n\n    default:\n      return state;\n  }\n};\n\ntype ActionsType = ToggleLoadingAction | SetItemsAction;\n\ntype ToggleLoading = typeof TOGGLE_LOADING;\n\ntype ToggleLoadingAction = {\n  type: ToggleLoading;\n  isLoading: boolean;\n};\n\nconst toggleLoading = (isLoading: boolean): ToggleLoadingAction => ({\n  type: TOGGLE_LOADING,\n  isLoading,\n});\n\ntype SetItems = typeof SET_ITEMS;\n\ntype SetItemsAction = {\n  type: SetItems;\n  pokemons: Array<PokemonTypes.Ref>;\n};\n\nconst setItems = (pokemons: Array<PokemonTypes.Ref>): SetItemsAction => ({\n  type: SET_ITEMS,\n  pokemons,\n});\n\nexport const loadItems = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  ActionsType\n> => async (dispatch) => {\n  dispatch(toggleLoading(true));\n  const data = await fetchPokemons(1000, 0);\n\n  dispatch(setItems(data.results));\n  dispatch(toggleLoading(false));\n};\n","import { MoveDetailedInfo } from \"./../../types/MoveTypes\";\nimport { RootState } from \"./../store\";\nimport { ThunkAction } from \"redux-thunk\";\nimport {\n  fetchPokemonById,\n  fetchVersions,\n  fetchMoveStats,\n} from \"./../../api/api\";\nimport * as PokemonTypes from \"../../types/PokemonTypes\";\n\nconst TOGGLE_LOADING = \"TOGGLE LOADING\";\nconst SET_POKEMOM = \"SET POKEMON\";\nconst SET_VERSIONS = \"SET VERSIONS\";\nconst SET_SELECTED_VERSION = \"SET SELECTED VERSION\";\nconst SET_MOVES = \"SET MOVES\";\n\ntype PokemonState = {\n  isLoading: boolean;\n  pokemon: PokemonTypes.Pokemon | null;\n  versions: Array<PokemonTypes.Ref>;\n  selectedVersion: string | null;\n  moves: Array<MoveDetailedInfo>;\n};\n\nconst initialState: PokemonState = {\n  isLoading: false,\n  pokemon: null,\n  versions: [],\n  selectedVersion: null,\n  moves: [],\n};\n\nexport const pokemonReducer = (\n  state: PokemonState = initialState,\n  action: ActionsType\n): PokemonState => {\n  switch (action.type) {\n    case TOGGLE_LOADING:\n      return { ...state, isLoading: action.isLoading };\n\n    case SET_POKEMOM:\n      return { ...state, pokemon: action.pokemon };\n\n    case SET_VERSIONS:\n      return { ...state, versions: action.versions };\n\n    case SET_SELECTED_VERSION:\n      return { ...state, selectedVersion: action.selectedVersion };\n\n    case SET_MOVES:\n      return { ...state, moves: action.moves };\n\n    default:\n      return state;\n  }\n};\n\ntype ActionsType =\n  | ToggleLoadingAction\n  | SetPokemonAction\n  | SetVersionsAction\n  | SetSelectedVersionAction\n  | SetMovesAction;\n\ntype ToggleLoading = typeof TOGGLE_LOADING;\n\ntype ToggleLoadingAction = {\n  type: ToggleLoading;\n  isLoading: boolean;\n};\n\nconst toggleLoading = (isLoading: boolean): ToggleLoadingAction => ({\n  type: TOGGLE_LOADING,\n  isLoading,\n});\n\ntype SetPokemon = typeof SET_POKEMOM;\n\ntype SetPokemonAction = {\n  type: SetPokemon;\n  pokemon: PokemonTypes.Pokemon;\n};\n\nconst setPokemom = (pokemon: PokemonTypes.Pokemon): SetPokemonAction => ({\n  type: SET_POKEMOM,\n  pokemon,\n});\n\nexport const loadPokemon = (\n  id: number\n): ThunkAction<void, RootState, unknown, ActionsType> => async (dispatch) => {\n  dispatch(toggleLoading(true));\n  const data = await fetchPokemonById(id);\n\n  const movesDetailed = await Promise.all(\n    data.moves.map((move) => fetchMoveStats(move))\n  );\n\n  dispatch(setMoves(movesDetailed));\n  dispatch(setPokemom(data));\n  dispatch(toggleLoading(false));\n};\n\ntype SetVersions = typeof SET_VERSIONS;\n\ntype SetVersionsAction = {\n  type: SetVersions;\n  versions: Array<PokemonTypes.Ref>;\n};\n\nconst setVersions = (versions: Array<PokemonTypes.Ref>): SetVersionsAction => ({\n  type: SET_VERSIONS,\n  versions,\n});\n\nexport const loadVersions = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  ActionsType\n> => async (dispatch) => {\n  const versions = await fetchVersions();\n\n  dispatch(setVersions(versions));\n};\n\ntype SetSelectedVersion = typeof SET_SELECTED_VERSION;\n\ntype SetSelectedVersionAction = {\n  type: SetSelectedVersion;\n  selectedVersion: string;\n};\n\nexport const setSelectedVersion = (\n  selectedVersion: string\n): SetSelectedVersionAction => ({\n  type: SET_SELECTED_VERSION,\n  selectedVersion,\n});\n\ntype SetMoves = typeof SET_MOVES;\n\ntype SetMovesAction = {\n  type: SetMoves;\n  moves: Array<MoveDetailedInfo>;\n};\n\nconst setMoves = (moves: Array<MoveDetailedInfo>): SetMovesAction => ({\n  type: SET_MOVES,\n  moves,\n});\n","import { RootState } from \"../store\";\nimport { fetchPokemonByName, fetchPokemons } from \"../../api/api\";\nimport * as PokemonTypes from \"../../types/PokemonTypes\";\nimport { ThunkAction } from \"redux-thunk\";\n\nconst TOGGLE_LOADING = \"TOGGLE LOADING\";\nconst SET_COUNT = \"SET COUNT\";\nconst SET_POKEMONS = \"SET POKEMONS\";\nconst SET_OFFSET = \"SET OFFSET\";\n\nexport type HomeState = {\n  isLoading: boolean;\n  count: number;\n  pokemons: Array<PokemonTypes.Pokemon>;\n  offset: number;\n};\n\nconst initialState: HomeState = {\n  isLoading: false,\n  count: 0,\n  pokemons: [],\n  offset: 0,\n};\n\nexport const homeReducer = (\n  state: HomeState = initialState,\n  action: ActionTypes\n): HomeState => {\n  switch (action.type) {\n    case TOGGLE_LOADING:\n      return { ...state, isLoading: action.isLoading };\n\n    case SET_COUNT:\n      return { ...state, count: action.count };\n\n    case SET_OFFSET:\n      return { ...state, offset: action.offset };\n\n    case SET_POKEMONS:\n      return { ...state, pokemons: action.pokemons };\n\n    default:\n      return state;\n  }\n};\n\ntype ActionTypes =\n  | ToggleLoadingAction\n  | SetCountAction\n  | SetOffsetAction\n  | SetPokemonsAction;\n\ntype ToggleLoading = typeof TOGGLE_LOADING;\n\ntype ToggleLoadingAction = {\n  type: ToggleLoading;\n  isLoading: boolean;\n};\n\nconst toggleLoading = (isLoading: boolean): ToggleLoadingAction => ({\n  type: TOGGLE_LOADING,\n  isLoading,\n});\n\ntype SetCount = typeof SET_COUNT;\n\ntype SetCountAction = {\n  type: SetCount;\n  count: number;\n};\n\nconst setCount = (count: number): SetCountAction => ({\n  type: SET_COUNT,\n  count,\n});\n\ntype SetOffset = typeof SET_OFFSET;\n\ntype SetOffsetAction = {\n  type: SetOffset;\n  offset: number;\n};\n\nexport const setOffset = (offset: number): SetOffsetAction => ({\n  type: SET_OFFSET,\n  offset,\n});\n\ntype SetPokemons = typeof SET_POKEMONS;\n\ntype SetPokemonsAction = {\n  type: SetPokemons;\n  pokemons: Array<PokemonTypes.Pokemon>;\n};\n\nconst setPokemons = (\n  pokemons: Array<PokemonTypes.Pokemon>\n): SetPokemonsAction => ({\n  type: SET_POKEMONS,\n  pokemons,\n});\n\nexport const loadPokemons = (\n  limit: number,\n  offset: number\n): ThunkAction<void, RootState, unknown, ActionTypes> => async (dispatch) => {\n  toggleLoading(true);\n  const data = await fetchPokemons(limit, offset);\n\n  const pokemons: Array<PokemonTypes.Pokemon> = await Promise.all(\n    data.results.map((ref) => fetchPokemonByName(ref.name))\n  );\n\n  dispatch(setOffset(offset));\n  dispatch(setCount(data.count));\n  dispatch(setPokemons(pokemons));\n  toggleLoading(false);\n};\n","import { listReducer } from \"./listPage/listReducer\";\nimport { pokemonReducer } from \"./pokemonPage/pokemonReducer\";\nimport { homeReducer } from \"./homePage/homeReducer\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst rootReducer = combineReducers({\n  homeState: homeReducer,\n  pokemonPage: pokemonReducer,\n  listPage: listReducer,\n});\n\ntype RootReducer = typeof rootReducer;\nexport type RootState = ReturnType<RootReducer>;\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n","import React, { FC } from \"react\";\nimport classnames from \"classnames\";\nimport s from \"./Button.module.scss\";\n\ntype PropsType = {\n  className?: string;\n  variant?: \"primary\";\n  disabled?: boolean;\n  onClick?: () => void;\n};\n\nconst Button: FC<PropsType> = ({\n  className,\n  variant,\n  disabled = false,\n  onClick,\n  children,\n}) => {\n  return (\n    <button\n      className={classnames(className, s.button, {\n        [s.button_primary]: variant === \"primary\",\n      })}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { FC } from \"react\";\nimport s from \"./Card.module.scss\";\n\ntype PropsType = {\n  image: string;\n  title: string;\n};\n\nconst Card: FC<PropsType> = ({ image, title }) => {\n  return (\n    <div className={s.card}>\n      <div className={s.card__imageWrapper}>\n        <div className={s.card__imageFixer}>\n          <img className={s.card__image} src={image} alt=\"pokemon\" />\n        </div>\n      </div>\n      <div className={s.card__title}>{title}</div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { RootState } from \"../store\";\nimport * as PokemonTypes from \"../../types/PokemonTypes\";\n\nexport const getHomePageIsLoading = (state: RootState): boolean =>\n  state.homeState.isLoading;\n\nexport const getPokemons = (state: RootState): Array<PokemonTypes.Pokemon> =>\n  state.homeState.pokemons;\n\nexport const getCount = (state: RootState): number => state.homeState.count;\n\nexport const getOffset = (state: RootState): number => state.homeState.offset;\n","import React, { FC } from \"react\";\nimport classnames from \"classnames\";\nimport s from \"./Spinner.module.scss\";\n\nconst Spinner: FC = () => {\n  return (\n    <div className={classnames(s[\"lds-roller\"])}>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { FC } from \"react\";\nimport s from \"./Loader.module.scss\";\nimport Spinner from \"./Spinner/Spinner\";\n\ntype PropsType = {\n  show: boolean;\n};\n\nexport const Loader: FC<PropsType> = ({ show }) => {\n  return (\n    <>\n      {show && (\n        <div className={s.loader}>\n          <Spinner />\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { FC, useEffect } from \"react\";\nimport classnames from \"classnames\";\nimport s from \"./Pokemons.module.scss\";\nimport { connect } from \"react-redux\";\nimport { loadPokemons } from \"../../store/homePage/homeReducer\";\nimport { RootState } from \"../../store/store\";\nimport * as PokemonTypes from \"../../types/PokemonTypes\";\nimport Button from \"../Button/Button\";\nimport Card from \"../Card/Card\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  getCount,\n  getHomePageIsLoading,\n  getOffset,\n  getPokemons,\n} from \"../../store/homePage/homeSelectors\";\nimport { Loader } from \"../Loader/Loader\";\n\ntype PropsType = {\n  isLoading: boolean;\n  pokemons: Array<PokemonTypes.Pokemon>;\n  count: number;\n  limit: number;\n  offset: number;\n  loadPokemons: (limit: number, offset: number) => void;\n};\n\nconst Pokemons: FC<PropsType> = ({\n  isLoading,\n  pokemons,\n  count,\n  limit,\n  offset,\n  loadPokemons,\n}) => {\n  useEffect(() => {\n    if (!pokemons.length) loadPokemons(limit, 0);\n  }, [loadPokemons, limit, pokemons]);\n\n  const loadFirstPage = () => {\n    loadPokemons(limit, 0);\n  };\n\n  const loadPrevPage = () => {\n    loadPokemons(limit, offset - 8);\n  };\n\n  const loadNextPage = () => {\n    loadPokemons(limit, offset + 8);\n  };\n\n  const loadLastPage = () => {\n    loadPokemons(limit, Math.floor(count / limit) * limit);\n  };\n\n  return (\n    <>\n      <Loader show={isLoading} />\n      <div className={s.gallery}>\n        <div className={classnames(s.gallery__cards, s.cards)}>\n          {pokemons.map((pokemon) => (\n            <NavLink to={`/pokemon/${pokemon.id}`} key={pokemon.id}>\n              <Card\n                image={pokemon.sprites.other[\"official-artwork\"].front_default}\n                title={pokemon.name}\n              />\n            </NavLink>\n          ))}\n        </div>\n        <div className={s.gallery__buttons}>\n          <Button\n            className={s[\"d-sm-none\"]}\n            variant=\"primary\"\n            disabled={offset < limit}\n            onClick={loadFirstPage}\n          >\n            &lt;&lt;<span className={s[\"d-sm-none\"]}> First</span>\n          </Button>\n          <Button\n            variant=\"primary\"\n            disabled={offset < limit}\n            onClick={loadPrevPage}\n          >\n            &lt;<span className={s[\"d-sm-none\"]}> Prev</span>\n          </Button>\n          <Button variant=\"primary\">{`${offset / limit + 1} / ${Math.ceil(\n            count / limit\n          )}`}</Button>\n          <Button\n            variant=\"primary\"\n            disabled={offset + 8 >= count}\n            onClick={loadNextPage}\n          >\n            <span className={s[\"d-sm-none\"]}>Next </span>&gt;\n          </Button>\n          <Button\n            className={s[\"d-sm-none\"]}\n            variant=\"primary\"\n            disabled={offset + 8 >= count}\n            onClick={loadLastPage}\n          >\n            <span className={s[\"d-sm-none\"]}>Last </span>&gt;&gt;\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\ntype OwnProps = {\n  limit: number;\n};\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => ({\n  isLoading: getHomePageIsLoading(state),\n  pokemons: getPokemons(state),\n  count: getCount(state),\n  offset: getOffset(state),\n  limit: ownProps.limit,\n});\n\nexport default connect(mapStateToProps, {\n  loadPokemons,\n})(React.memo(Pokemons));\n","import { MoveDetailedInfo } from \"./../../types/MoveTypes\";\nimport { RootState } from \"./../store\";\nimport * as PokemonTypes from \"../../types/PokemonTypes\";\nimport { createSelector } from \"reselect\";\n\nexport const getPokemonPageIsLoading = (state: RootState): boolean =>\n  state.pokemonPage.isLoading;\n\nexport const getPokemon = (state: RootState): PokemonTypes.Pokemon | null =>\n  state.pokemonPage.pokemon;\n\nexport const getVersions = (state: RootState): Array<PokemonTypes.Ref> =>\n  state.pokemonPage.versions;\n\nexport const getSelectedVersion = (state: RootState): string | null =>\n  state.pokemonPage.selectedVersion;\n\nexport const getMoves = (state: RootState): Array<MoveDetailedInfo> =>\n  state.pokemonPage.moves;\n\nexport const getMovesByVersion = createSelector(\n  getMoves,\n  getSelectedVersion,\n  (moves, version) => {\n    return moves.filter((move) =>\n      move.version_group_details.some((v) => v.version_group.name === version)\n    );\n  }\n);\n","import React, { FC } from \"react\";\nimport classnames from \"classnames\";\nimport s from \"../Block.module.scss\";\nimport * as PokemonTypes from \"../../../types/PokemonTypes\";\n\ntype PropsType = {\n  abilities: Array<PokemonTypes.Ability>;\n  forms: Array<PokemonTypes.Ref>;\n  height: number;\n  weight: number;\n  base_experience: number;\n  types: Array<PokemonTypes.Type>;\n};\n\nconst SummaryBlock: FC<PropsType> = ({\n  abilities,\n  forms,\n  height,\n  weight,\n  base_experience,\n  types,\n}) => {\n  return (\n    <div className={s.block}>\n      <div className={s.block__title}>Summary</div>\n      <div className={s.block__line}>\n        <span className={s.block__key}>Abilities:</span>\n        {abilities.map((ab) => (\n          <span\n            className={classnames(s.tag, s.block__value)}\n            key={ab.ability.name}\n          >\n            {ab.ability.name}\n          </span>\n        ))}\n      </div>\n\n      <div className={s.block__line}>\n        <span className={s.block__key}>Forms:</span>\n        {forms.map((form) => (\n          <span className={classnames(s.tag, s.block__value)} key={form.name}>\n            {form.name}\n          </span>\n        ))}\n      </div>\n\n      <div className={s.block__line}>\n        <span className={s.block__key}>Height:</span>\n        <span className={s.block__value}>{height / 10}m</span>\n      </div>\n\n      <div className={s.block__line}>\n        <span className={s.block__key}>Weight:</span>\n        <span className={s.block__value}>{weight / 10}kg</span>\n      </div>\n\n      <div className={s.block__line}>\n        <span className={s.block__key}>Base Experience:</span>\n        <span className={s.block__value}>{base_experience} exp</span>\n      </div>\n\n      <div className={s.block__line}>\n        <span className={s.block__key}>Type:</span>\n        {types.map((type) => (\n          <span\n            className={classnames(s.tag, s.block__value)}\n            key={type.type.name}\n          >\n            {type.type.name}\n          </span>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SummaryBlock;\n","import React, { FC } from \"react\";\nimport s from \"../Block.module.scss\";\nimport * as PokemonTypes from \"../../../types/PokemonTypes\";\n\ntype PropsType = {\n  stats: Array<PokemonTypes.Stat>;\n};\n\nconst StatsBlock: FC<PropsType> = ({ stats }) => {\n  return (\n    <div className={s.block}>\n      <div className={s.block__title}>Stats</div>\n      {stats.map((stat) => (\n        <div className={s.block__line} key={stat.stat.name}>\n          <span className={s.block__key}>{stat.stat.name}:</span>\n          <span className={s.block__value}>{stat.base_stat}</span>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default StatsBlock;\n","import React, { FC } from \"react\";\nimport s from \"./MovesTable.module.scss\";\nimport { MoveDetailedInfo } from \"../../../../types/MoveTypes\";\n\ntype PropsType = {\n  selectedVersion: string | null;\n  moves: Array<MoveDetailedInfo>;\n};\n\nconst MovesTable: FC<PropsType> = ({ selectedVersion, moves }) => {\n  return (\n    <table className={s.table}>\n      <thead>\n        <tr className={s.table__line}>\n          <th>Move</th>\n          <th>Level</th>\n          <th>Accuracy</th>\n          <th>Power</th>\n          <th>PP</th>\n          <th>Type</th>\n          <th>Learn Method</th>\n        </tr>\n      </thead>\n      <tbody>\n        {moves.map((move) => (\n          <tr className={s.table__line} key={move.move.name}>\n            <td>\n              <span>{move.move.name}</span>\n            </td>\n\n            <td>\n              {move.version_group_details.find(\n                (m) => m.version_group.name === selectedVersion\n              )?.level_learned_at || \"-\"}\n            </td>\n\n            <td>{move.accuracy || \"-\"}</td>\n\n            <td>{move.power || \"-\"}</td>\n\n            <td>{move.pp || \"-\"}</td>\n\n            <td>{move.type}</td>\n\n            <td>\n              {move.version_group_details.find(\n                (m) => m.version_group.name === selectedVersion\n              )?.move_learn_method.name || \"-\"}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default MovesTable;\n","import React, { FC } from \"react\";\nimport s from \"../Block.module.scss\";\nimport * as PokemonTypes from \"../../../types/PokemonTypes\";\nimport { MoveDetailedInfo } from \"../../../types/MoveTypes\";\nimport MovesTable from \"./MovesTable/MovesTable\";\n\ntype PropsType = {\n  versions: Array<PokemonTypes.Ref>;\n  selectedVersion: string | null;\n  moves: Array<MoveDetailedInfo>;\n  setSelectedVersion: (version: string) => void;\n};\n\nconst MovesBlock: FC<PropsType> = ({\n  versions,\n  selectedVersion,\n  moves,\n  setSelectedVersion,\n}) => {\n  return (\n    <div className={s.block}>\n      <div className={s.block__title}>\n        Game Version\n        <select\n          className={s.block__select}\n          name=\"\"\n          id=\"\"\n          value={selectedVersion as string}\n          onChange={(e) => setSelectedVersion(e.target.value)}\n        >\n          {versions.map((version) => (\n            <option key={version.name} value={version.name}>\n              {version.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <MovesTable selectedVersion={selectedVersion} moves={moves} />\n    </div>\n  );\n};\n\nexport default MovesBlock;\n","import React, { FC, useEffect } from \"react\";\nimport s from \"./Pokemon.module.scss\";\nimport { connect } from \"react-redux\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport {\n  loadPokemon,\n  loadVersions,\n  setSelectedVersion,\n} from \"../../store/pokemonPage/pokemonReducer\";\nimport {\n  getPokemonPageIsLoading,\n  getMovesByVersion,\n  getPokemon,\n  getSelectedVersion,\n  getVersions,\n} from \"../../store/pokemonPage/pokemonSelectors\";\nimport { RootState } from \"../../store/store\";\nimport { MoveDetailedInfo } from \"../../types/MoveTypes\";\nimport * as PokemonTypes from \"../../types/PokemonTypes\";\nimport Card from \"../Card/Card\";\nimport SummaryBlock from \"./SummaryBlock/SummaryBlock\";\nimport StatsBlock from \"./StatsBlock/StatsBlock\";\nimport MovesBlock from \"./MovesBlock/MovesBlock\";\nimport { Loader } from \"../Loader/Loader\";\n\ntype PokemonParams = {\n  id: string;\n};\n\ntype PropsType = {\n  isLoading: boolean;\n  pokemon: PokemonTypes.Pokemon | null;\n  versions: Array<PokemonTypes.Ref>;\n  selectedVersion: string | null;\n  moves: Array<MoveDetailedInfo>;\n  match: OwnProps;\n  loadPokemon: (id: number) => void;\n  loadVersions: () => void;\n  setSelectedVersion: (version: string) => void;\n};\n\nconst Pokemon: FC<PropsType> = ({\n  isLoading,\n  pokemon,\n  versions,\n  selectedVersion,\n  moves,\n  match,\n  loadPokemon,\n  loadVersions,\n  setSelectedVersion,\n}) => {\n  useEffect(() => {\n    loadPokemon(+match.match.params.id);\n  }, [loadPokemon, match]);\n\n  useEffect(() => {\n    if (!versions.length) loadVersions();\n    else setSelectedVersion(\"crystal\");\n  }, [versions, loadVersions, setSelectedVersion]);\n\n  return (\n    <>\n      <Loader show={isLoading} />\n      {pokemon && (\n        <div className={s.pokemonPage}>\n          <div className={s.pokemon}>\n            <Card\n              image={pokemon.sprites.other[\"official-artwork\"].front_default}\n              title={pokemon.name}\n            />\n\n            <SummaryBlock\n              abilities={pokemon.abilities}\n              forms={pokemon.forms}\n              height={pokemon.height}\n              weight={pokemon.weight}\n              base_experience={pokemon.base_experience}\n              types={pokemon.types}\n            />\n\n            <StatsBlock stats={pokemon.stats} />\n          </div>\n\n          <MovesBlock\n            versions={versions}\n            selectedVersion={selectedVersion}\n            moves={moves}\n            setSelectedVersion={setSelectedVersion}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n\ntype OwnProps = RouteComponentProps<PokemonParams>;\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => ({\n  isLoading: getPokemonPageIsLoading(state),\n  pokemon: getPokemon(state),\n  versions: getVersions(state),\n  selectedVersion: getSelectedVersion(state),\n  moves: getMovesByVersion(state),\n  match: ownProps,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, { loadPokemon, loadVersions, setSelectedVersion })(\n    Pokemon\n  )\n);\n","export default __webpack_public_path__ + \"static/media/menu.28107808.svg\";","import React, { FC } from \"react\";\nimport classnames from \"classnames\";\nimport s from \"./Header.module.scss\";\nimport { NavLink } from \"react-router-dom\";\nimport menuIcon from \"../../assets/icons/menu.svg\";\n\ntype PropsType = {\n  openMenu: () => void;\n};\n\nconst Header: FC<PropsType> = ({ openMenu }) => {\n  return (\n    <div className={s.header}>\n      <div className={s.header__wrapper}>\n        <NavLink className={s.nav__link} to=\"/home\">\n          <h1 className={s.header__brand}>Pokemon</h1>\n        </NavLink>\n        <img\n          onClick={() => openMenu()}\n          className={s.menuIcon}\n          src={menuIcon}\n          alt=\"menu\"\n        />\n        <nav className={classnames(s.header__nav, s.nav)}>\n          <ul className={s.nav__list}>\n            <li className={s.nav__item}>\n              <NavLink className={s.nav__link} to=\"/home\">\n                Home\n              </NavLink>\n            </li>\n            <li className={s.nav__item}>\n              <NavLink className={s.nav__link} to=\"/list\">\n                List\n              </NavLink>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/close.da5c4222.svg\";","import React, { FC } from \"react\";\nimport classnames from \"classnames\";\nimport s from \"./Menu.module.scss\";\nimport closeIcon from \"../../assets/icons/close.svg\";\nimport { NavLink } from \"react-router-dom\";\n\ntype PropsType = {\n  isShowing: boolean;\n  closeMenu: () => void;\n};\n\nconst Menu: FC<PropsType> = ({ isShowing, closeMenu }) => {\n  return (\n    <>\n      <div\n        onClick={closeMenu}\n        className={classnames(s.overlay, {\n          [s.overlay_hidden]: !isShowing,\n        })}\n      ></div>\n      <nav className={classnames(s.menu, { [s.menu_hidden]: !isShowing })}>\n        <img\n          onClick={() => closeMenu()}\n          className={s.menu__closeButton}\n          src={closeIcon}\n          alt=\"close\"\n        />\n        <ul className={s.menu__list}>\n          <li className={s.menu__item}>\n            <NavLink to=\"/home\">\n              <span onClick={closeMenu} className={s.menu__itemLabel}>\n                Home\n              </span>\n            </NavLink>\n          </li>\n          <li className={s.menu__item}>\n            <NavLink to=\"/list\">\n              <span onClick={closeMenu} className={s.menu__itemLabel}>\n                List\n              </span>\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </>\n  );\n};\n\nexport default Menu;\n","import * as PokemonTypes from \"../../types/PokemonTypes\";\nimport { RootState } from \"./../store\";\n\nexport const getListPageIsLoading = (state: RootState): boolean =>\n  state.listPage.isLoading;\n\nexport const getPokemonsRefs = (state: RootState): Array<PokemonTypes.Ref> =>\n  state.listPage.pokemons;\n","import React, { FC, useEffect } from \"react\";\nimport s from \"./List.module.scss\";\nimport { useHistory } from \"react-router-dom\";\nimport { RootState } from \"../../store/store\";\nimport { loadItems } from \"../../store/listPage/listReducer\";\nimport { connect } from \"react-redux\";\nimport * as PokemonTypes from \"../../types/PokemonTypes\";\nimport {\n  getListPageIsLoading,\n  getPokemonsRefs,\n} from \"../../store/listPage/listSelectors\";\nimport { Loader } from \"../Loader/Loader\";\n\ntype PropsType = {\n  isLoading: boolean;\n  pokemons: Array<PokemonTypes.Ref>;\n  loadItems: () => void;\n};\n\nconst List: FC<PropsType> = ({ isLoading, pokemons, loadItems }) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    if (!pokemons.length) loadItems();\n  }, [pokemons, loadItems]);\n\n  const handleClick = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    const element = e.target as HTMLElement;\n\n    if (element.dataset.url)\n      history.push(\n        \"/pokemon/\" + element.dataset.url.split(\"/\").slice(-2, -1).join(\"\")\n      );\n  };\n\n  return (\n    <>\n      <Loader show={isLoading} />\n      <div className={s.list} onClick={handleClick}>\n        {pokemons.map((pokemon) => (\n          <div\n            className={s.list__item}\n            key={pokemon.name}\n            data-url={pokemon.url}\n          >\n            {pokemon.name}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: RootState) => ({\n  isLoading: getListPageIsLoading(state),\n  pokemons: getPokemonsRefs(state),\n});\n\nexport default connect(mapStateToProps, { loadItems })(List);\n","import React, { useState } from \"react\";\nimport s from \"./App.module.scss\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/store\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\nimport Pokemons from \"./components/Pokemons/Pokemons\";\nimport Pokemon from \"./components/Pokemon/Pokemon\";\nimport Header from \"./components/Header/Header\";\nimport Menu from \"./components/Menu/Menu\";\nimport List from \"./components/List/List\";\n\nconst App = () => {\n  const [menuShowing, setMenuShowing] = useState(false);\n\n  const openMenu = () => {\n    setMenuShowing(true);\n  };\n\n  const closeMenu = () => {\n    setMenuShowing(false);\n  };\n\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Menu isShowing={menuShowing} closeMenu={closeMenu} />\n        <Header openMenu={openMenu} />\n        <div className={s.main}>\n          <div className={s.main__wrapper}>\n            <Switch>\n              <Redirect exact from=\"/\" to=\"/home\" />\n              <Redirect exact from=\"/pokemon\" to=\"/home\" />\n\n              <Route path=\"/home\" render={() => <Pokemons limit={8} />} />\n              <Route path=\"/pokemon/:id\" render={() => <Pokemon />} />\n              <Route path=\"/list\" render={() => <List />} />\n\n              <Route path=\"*\" render={() => <div>404</div>} />\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}